$date
	Wed Aug 28 21:46:10 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module decode_stage_tb $end
$var wire 1 ! store $end
$var wire 5 " rs2 [4:0] $end
$var wire 5 # rs1 [4:0] $end
$var wire 1 $ regWrite $end
$var wire 32 % regData2 [31:0] $end
$var wire 32 & regData1 [31:0] $end
$var wire 5 ' rd [4:0] $end
$var wire 7 ( opCode [6:0] $end
$var wire 32 ) nextPC [31:0] $end
$var wire 1 * load $end
$var wire 1 + jump $end
$var wire 32 , instruction [31:0] $end
$var wire 32 - imm [31:0] $end
$var wire 7 . funct7 [6:0] $end
$var wire 3 / funct3 [2:0] $end
$var wire 1 0 branch $end
$var wire 1 1 aluSrc $end
$var wire 5 2 aluCtrl [4:0] $end
$var wire 32 3 PC [31:0] $end
$var reg 1 4 clk $end
$var reg 32 5 inputWriteData [31:0] $end
$var reg 32 6 pcAdder [31:0] $end
$var reg 1 7 reset $end
$scope module im1 $end
$var wire 32 8 address [31:0] $end
$var reg 32 9 instruction [31:0] $end
$var integer 32 : i [31:0] $end
$upscope $end
$scope module md1 $end
$var wire 32 ; instruction [31:0] $end
$var reg 5 < aluCtrl [4:0] $end
$var reg 1 1 aluSrc $end
$var reg 1 0 branch $end
$var reg 3 = funct3 [2:0] $end
$var reg 7 > funct7 [6:0] $end
$var reg 32 ? imm [31:0] $end
$var reg 1 + jump $end
$var reg 1 * load $end
$var reg 7 @ opCode [6:0] $end
$var reg 5 A rd [4:0] $end
$var reg 1 $ regWrite $end
$var reg 5 B rs1 [4:0] $end
$var reg 5 C rs2 [4:0] $end
$var reg 1 ! store $end
$upscope $end
$scope module pc2 $end
$var wire 1 4 clk $end
$var wire 1 7 reset $end
$var wire 32 D nextPC [31:0] $end
$var reg 32 E PC [31:0] $end
$upscope $end
$scope module pca1 $end
$var wire 32 F PC [31:0] $end
$var reg 32 G incrementedPC [31:0] $end
$upscope $end
$scope module rf1 $end
$var wire 1 4 clock $end
$var wire 5 H rd [4:0] $end
$var wire 32 I regData1 [31:0] $end
$var wire 32 J regData2 [31:0] $end
$var wire 1 7 reset $end
$var wire 5 K rs1 [4:0] $end
$var wire 5 L rs2 [4:0] $end
$var wire 1 $ write $end
$var wire 32 M writeData [31:0] $end
$scope begin $ivl_for_loop0 $end
$var integer 32 N i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b100000 N
bx M
b0 L
b0 K
b0 J
b0 I
b1 H
b100 G
b0 F
b0 E
b100 D
b0 C
b0 B
b1 A
b110011 @
b0 ?
b0 >
b0 =
b0 <
b10110011 ;
b1000000 :
b10110011 9
b0 8
17
b0 6
bx 5
04
b0 3
b0 2
01
00
b0 /
b0 .
b0 -
b10110011 ,
0+
0*
b100 )
b110011 (
b1 '
b0 &
b0 %
1$
b0 #
b0 "
0!
$end
#5
b10 2
b10 <
b1 -
b1 ?
11
0$
1!
b1000 )
b1000 D
b1000 G
b100011 (
b100011 @
b10100011 ,
b10100011 9
b10100011 ;
b100 3
b100 8
b100 E
b100 F
b1 5
b1 M
07
14
#10
04
#15
b1111 2
b1111 <
b0 -
b0 ?
01
0!
b0 '
b0 A
b0 H
b1100 )
b1100 D
b1100 G
b0 (
b0 @
b0 ,
b0 9
b0 ;
b1000 3
b1000 8
b1000 E
b1000 F
14
#20
04
#25
b10000 )
b10000 D
b10000 G
b1100 3
b1100 8
b1100 E
b1100 F
14
#30
04
#35
b10100 )
b10100 D
b10100 G
b10000 3
b10000 8
b10000 E
b10000 F
14
#40
04
#45
b11000 )
b11000 D
b11000 G
b10100 3
b10100 8
b10100 E
b10100 F
14
#50
04
#55
b11100 )
b11100 D
b11100 G
b11000 3
b11000 8
b11000 E
b11000 F
14
#60
04
#65
b100000 )
b100000 D
b100000 G
b11100 3
b11100 8
b11100 E
b11100 F
14
#70
04
#75
b100100 )
b100100 D
b100100 G
b100000 3
b100000 8
b100000 E
b100000 F
14
#80
04
#85
b101000 )
b101000 D
b101000 G
b100100 3
b100100 8
b100100 E
b100100 F
14
#90
04
#95
b101100 )
b101100 D
b101100 G
b101000 3
b101000 8
b101000 E
b101000 F
14
#100
04
#105
b110000 )
b110000 D
b110000 G
b101100 3
b101100 8
b101100 E
b101100 F
14
#110
04
#115
b110100 )
b110100 D
b110100 G
b110000 3
b110000 8
b110000 E
b110000 F
14
#120
04
#125
b111000 )
b111000 D
b111000 G
b110100 3
b110100 8
b110100 E
b110100 F
14
#130
04
#135
b111100 )
b111100 D
b111100 G
b111000 3
b111000 8
b111000 E
b111000 F
14
#140
04
#145
b1000000 )
b1000000 D
b1000000 G
b111100 3
b111100 8
b111100 E
b111100 F
14
#150
04
#155
b1000100 )
b1000100 D
b1000100 G
b1000000 3
b1000000 8
b1000000 E
b1000000 F
14
#160
04
#165
b1001000 )
b1001000 D
b1001000 G
b1000100 3
b1000100 8
b1000100 E
b1000100 F
14
#170
04
#175
b1001100 )
b1001100 D
b1001100 G
b1001000 3
b1001000 8
b1001000 E
b1001000 F
14
#180
04
#185
b1010000 )
b1010000 D
b1010000 G
b1001100 3
b1001100 8
b1001100 E
b1001100 F
14
#190
04
#195
b1010100 )
b1010100 D
b1010100 G
b1010000 3
b1010000 8
b1010000 E
b1010000 F
14
#200
04
#205
b1011000 )
b1011000 D
b1011000 G
b1010100 3
b1010100 8
b1010100 E
b1010100 F
14
