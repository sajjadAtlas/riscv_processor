$date
	Thu Aug 29 19:00:37 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module ALU_tb $end
$var wire 32 ! result [31:0] $end
$var reg 4 " ALUop [3:0] $end
$var reg 3 # funct3 [2:0] $end
$var reg 7 $ funct7 [6:0] $end
$var reg 32 % operand1 [31:0] $end
$var reg 32 & operand2 [31:0] $end
$scope module a1 $end
$var wire 4 ' ALUop [3:0] $end
$var wire 3 ( funct3 [2:0] $end
$var wire 7 ) funct7 [6:0] $end
$var wire 32 * operand1 [31:0] $end
$var wire 32 + operand2 [31:0] $end
$var wire 1 , op2_sign $end
$var wire 1 - op1_sign $end
$var reg 32 . result [31:0] $end
$var integer 32 / i [31:0] $end
$var integer 32 0 msb [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b0 0
b0 /
b1 .
1-
0,
b101 +
b11111111111111111111111111111011 *
b0 )
b10 (
b0 '
b101 &
b11111111111111111111111111111011 %
b0 $
b10 #
b0 "
b1 !
$end
#10
0-
b111 &
b111 +
b101 %
b101 *
#20
b0 !
b0 .
b101 &
b101 +
b111 %
b111 *
#30
1,
b1 !
b1 .
1-
b11111111111111111111111111111011 &
b11111111111111111111111111111011 +
b11111111111111111111111111111001 %
b11111111111111111111111111111001 *
#40
b0 !
b0 .
b11111111111111111111111111111001 &
b11111111111111111111111111111001 +
#50
b11111111111111111111111111111000 &
b11111111111111111111111111111000 +
#60
0,
0-
b101 &
b101 +
b101 %
b101 *
b11 #
b11 (
#70
1-
b11111111111111111111111111111011 %
b11111111111111111111111111111011 *
#80
b1 !
b1 .
0-
b100 %
b100 *
#90
1,
b11111111111111111111111111111011 &
b11111111111111111111111111111011 +
b101 %
b101 *
#100
b0 !
b0 .
1-
b11111111111111111111111111111101 &
b11111111111111111111111111111101 +
b11111111111111111111111111111110 %
b11111111111111111111111111111110 *
#110
b1 !
b1 .
b11111111111111111111111111111110 &
b11111111111111111111111111111110 +
b11111111111111111111111111111101 %
b11111111111111111111111111111101 *
#120
